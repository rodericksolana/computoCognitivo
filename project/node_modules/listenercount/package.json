{
  "_args": [
    [
      {
        "raw": "listenercount@~1.0.1",
        "scope": null,
        "escapedName": "listenercount",
        "name": "listenercount",
        "rawSpec": "~1.0.1",
        "spec": ">=1.0.1 <1.1.0",
        "type": "range"
      },
      "/home/rodericksolana/Desktop/ITESM/ComputoCognitivo/P2/bluemix/conexionDB/copia/node_modules/unzipper"
    ]
  ],
  "_from": "listenercount@>=1.0.1 <1.1.0",
  "_id": "listenercount@1.0.1",
  "_inCache": true,
  "_location": "/listenercount",
  "_nodeVersion": "4.3.0",
  "_npmOperationalInternal": {
    "host": "packages-9-west.internal.npmjs.com",
    "tmp": "tmp/listenercount-1.0.1.tgz_1455731833541_0.6063189224805683"
  },
  "_npmUser": {
    "name": "jden",
    "email": "jason@denizac.org"
  },
  "_npmVersion": "2.14.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "listenercount@~1.0.1",
    "scope": null,
    "escapedName": "listenercount",
    "name": "listenercount",
    "rawSpec": "~1.0.1",
    "spec": ">=1.0.1 <1.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/unzipper"
  ],
  "_resolved": "https://registry.npmjs.org/listenercount/-/listenercount-1.0.1.tgz",
  "_shasum": "84c8a72ab59c4725321480c975e6508342e70937",
  "_shrinkwrap": null,
  "_spec": "listenercount@~1.0.1",
  "_where": "/home/rodericksolana/Desktop/ITESM/ComputoCognitivo/P2/bluemix/conexionDB/copia/node_modules/unzipper",
  "author": {
    "name": "jden",
    "email": "jason@denizac.org"
  },
  "bugs": {
    "url": "https://github.com/jden/node-listenercount/issues"
  },
  "dependencies": {},
  "description": "backwards compatible version of builtin events.listenercount",
  "devDependencies": {
    "mochi": "0.3.0",
    "standard": "^4.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "84c8a72ab59c4725321480c975e6508342e70937",
    "tarball": "https://registry.npmjs.org/listenercount/-/listenercount-1.0.1.tgz"
  },
  "gitHead": "3cf5c50626382248b2561673f22acaa1ea8ab5c2",
  "homepage": "https://github.com/jden/node-listenercount#readme",
  "keywords": [
    "eventemitter",
    "events",
    "listener",
    "count",
    "listenercount",
    "polyfill",
    "native",
    "builtin"
  ],
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jden",
      "email": "jason@denizac.org"
    }
  ],
  "name": "listenercount",
  "optionalDependencies": {},
  "readme": "# listenercount\nbackwards compatible version of builtin events.listenercount\n\n[![js standard style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)]()\n\n[![build status](https://circleci.com/gh/jden/node-listenercount.svg?&style=shield)][circleci]\n\n[circleci]: https://circleci.com/gh/jden/node-listenercount\n[standard]: http://standardjs.com/\n\nA polyfill of Node.js 0.12+'s events.listenerCount function for Node.js 0.10. Uses the builtin if present, otherwise uses polyfill implementation.\n\n## usage\n```js\nvar listenerCount = require('listenercount')\nvar EventEmitter = require('events').EventEmitter\n\nvar ee = new EventEmitter()\nee.on('event', function () {})\nlistenerCount(ee, 'event') // => 1\nlistenerCount(ee, 'foo') // => 0\n```\n\n\n## api\n### `listenerCount(ee : EventEmitter, eventName : String) => Number`\nReturns the number of listeners for a given `eventName` on an EventEmitter.\n\n\n## installation\n\n    $ npm install listenercount\n\n\n## running the tests\n\nFrom package root:\n\n    $ npm install\n    $ npm test\n\n\n## contributors\n\n- jden <jason@denizac.org>\n\n\n## license\n\nISC. (c) MMXVI jden <jason@denizac.org>. See LICENSE.md\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/jden/node-listenercount.git"
  },
  "scripts": {
    "test": "standard && mochi"
  },
  "version": "1.0.1"
}
